<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Sealin</title>
  
  <subtitle>初闻不解词间意，再听已是曲中人。</subtitle>
  <link href="http://www.sealin.net/atom.xml" rel="self"/>
  
  <link href="http://www.sealin.net/"/>
  <updated>2023-05-23T01:43:32.497Z</updated>
  <id>http://www.sealin.net/</id>
  
  <author>
    <name>Sealin</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>SQLServer锁表查询及解锁</title>
    <link href="http://www.sealin.net/2022/09/07/sql-server-unlock/"/>
    <id>http://www.sealin.net/2022/09/07/sql-server-unlock/</id>
    <published>2022-09-07T03:36:23.000Z</published>
    <updated>2023-05-23T01:43:32.497Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="1-查询锁表会话和表名"><a href="#1-查询锁表会话和表名" class="headerlink" title="1. 查询锁表会话和表名"></a>1. 查询锁表会话和表名</h1><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> request_session_id 锁表进程, OBJECT_NAME(resource_associated_entity_id) 被锁表名</span><br><span class="line"><span class="keyword">from</span> sys.dm_tran_locks <span class="keyword">where</span> resource_type <span class="operator">=</span> <span class="string">&#x27;OBJECT&#x27;</span>;</span><br></pre></td></tr></table></figure><h1 id="2-查询锁表状态及锁表SQL"><a href="#2-查询锁表状态及锁表SQL" class="headerlink" title="2. 查询锁表状态及锁表SQL"></a>2. 查询锁表状态及锁表SQL</h1><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> A.BLOCKING_SESSION_ID, A.WAIT_DURATION_MS, A.SESSION_ID, B.TEXT</span><br><span class="line"><span class="keyword">FROM</span> SYS.DM_OS_WAITING_TASKS A,</span><br><span class="line">     (<span class="keyword">SELECT</span> T.TEXT, C.SESSION_ID</span><br><span class="line">      <span class="keyword">FROM</span> SYS.DM_EXEC_CONNECTIONS C</span><br><span class="line">               <span class="keyword">CROSS</span> APPLY SYS.DM_EXEC_SQL_TEXT(C.MOST_RECENT_SQL_HANDLE) T) B</span><br><span class="line"><span class="keyword">WHERE</span> A.SESSION_ID <span class="operator">=</span> B.SESSION_ID</span><br><span class="line">  <span class="keyword">AND</span> A.BLOCKING_SESSION_ID <span class="keyword">IS</span> <span class="keyword">NOT</span> <span class="keyword">NULL</span>;</span><br></pre></td></tr></table></figure><h1 id="3-查询阻塞语句"><a href="#3-查询阻塞语句" class="headerlink" title="3. 查询阻塞语句"></a>3. 查询阻塞语句</h1><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> BL.SPID BLOCKING_SESSION,</span><br><span class="line">       BL.BLOCKED BLOCKED_SESSION,</span><br><span class="line">       ST.TEXT BLOCKEDTEXT,</span><br><span class="line">       SB.TEXT BLOCKINGTEXT</span><br><span class="line"><span class="keyword">FROM</span> (<span class="keyword">SELECT</span> SPID, BLOCKED</span><br><span class="line">      <span class="keyword">FROM</span> SYS.SYSPROCESSES A</span><br><span class="line">      <span class="keyword">WHERE</span> BLOCKED <span class="operator">&gt;</span> <span class="number">0</span></span><br><span class="line">        <span class="keyword">AND</span> <span class="keyword">NOT</span> <span class="keyword">EXISTS</span> (<span class="keyword">SELECT</span> <span class="number">1</span></span><br><span class="line">                        <span class="keyword">FROM</span> SYS.SYSPROCESSES B</span><br><span class="line">                        <span class="keyword">WHERE</span> BLOCKED <span class="operator">&gt;</span> <span class="number">0</span></span><br><span class="line">                          <span class="keyword">AND</span> A.BLOCKED <span class="operator">=</span> B.SPID)</span><br><span class="line">      <span class="keyword">UNION</span></span><br><span class="line">      <span class="keyword">SELECT</span> SPID, BLOCKED</span><br><span class="line">      <span class="keyword">FROM</span> SYS.SYSPROCESSES</span><br><span class="line">      <span class="keyword">WHERE</span> BLOCKED <span class="operator">&gt;</span> <span class="number">0</span>) BL,</span><br><span class="line">     (<span class="keyword">SELECT</span> T.TEXT, C.SESSION_ID</span><br><span class="line">      <span class="keyword">FROM</span> SYS.DM_EXEC_CONNECTIONS C</span><br><span class="line">               <span class="keyword">CROSS</span> APPLY SYS.DM_EXEC_SQL_TEXT(C.MOST_RECENT_SQL_HANDLE) T) ST,</span><br><span class="line">     (<span class="keyword">SELECT</span> T.TEXT, C.SESSION_ID</span><br><span class="line">      <span class="keyword">FROM</span> SYS.DM_EXEC_CONNECTIONS C</span><br><span class="line">               <span class="keyword">CROSS</span> APPLY SYS.DM_EXEC_SQL_TEXT(C.MOST_RECENT_SQL_HANDLE) T) SB</span><br><span class="line"><span class="keyword">WHERE</span> BL.BLOCKED <span class="operator">=</span> ST.SESSION_ID</span><br><span class="line">  <span class="keyword">AND</span> BL.SPID <span class="operator">=</span> SB.SESSION_ID;</span><br></pre></td></tr></table></figure><h1 id="4-批量生成解锁语句"><a href="#4-批量生成解锁语句" class="headerlink" title="4. 批量生成解锁语句"></a>4. 批量生成解锁语句</h1>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/assets/js/APlayer.min.js&quot; cla</summary>
      
    
    
    
    <category term="数据库" scheme="http://www.sealin.net/categories/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
    
    <category term="数据库" scheme="http://www.sealin.net/tags/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
    <category term="问题解决" scheme="http://www.sealin.net/tags/%E9%97%AE%E9%A2%98%E8%A7%A3%E5%86%B3/"/>
    
  </entry>
  
  <entry>
    <title>Spring Gateway网关长时间不返回数据问题</title>
    <link href="http://www.sealin.net/2021/07/27/gateway-holding/"/>
    <id>http://www.sealin.net/2021/07/27/gateway-holding/</id>
    <published>2021-07-27T05:30:44.000Z</published>
    <updated>2023-05-23T01:43:32.479Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h1><p>SpringCloud项目经过网关后,有时候会出现服务返回了数据, 但是客户端收不到数据, 持续等待的情况. 通过查看请求头, 发现除了大量的<code>forward</code>头外, 有一个<code>expect</code>不认识, 通过查阅资料发现作用如下:</p><blockquote><p>在使用curl做POST的时候（比如通过PHP发起post请求），当要POST的数据大于1024字节的时候，curl并不会直接就发起POST请求, 而是会分为2步：</p><p>发送一个请求，包含一个Expect:100-continue，询问Server使用愿意接受数据。接收到Server返回的100-continue应答以后, 才把数据POST给Server。</p></blockquote><h1 id="解决"><a href="#解决" class="headerlink" title="解决"></a>解决</h1><p>参考<a href="https://cloud.spring.io/spring-cloud-static/spring-cloud-gateway/2.1.3.RELEASE/single/spring-cloud-gateway.html#_removerequestheader_gatewayfilter_factory">官方文档</a>, 有以下解决方案:</p><p>在服务配置添加过滤器:</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">cloud:</span></span><br><span class="line">    <span class="attr">gateway:</span></span><br><span class="line">      <span class="attr">routes:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">id:</span> <span class="string">remove-header</span></span><br><span class="line">      <span class="attr">uri:</span> <span class="string">https://example.org</span></span><br><span class="line">      <span class="attr">filters:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">RemoveRequestHeader=Expect</span></span><br></pre></td></tr></table></figure><p>添加全局过滤器</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">cloud:</span></span><br><span class="line">    <span class="attr">gateway:</span></span><br><span class="line">      <span class="attr">default-filters:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">RemoveRequestHeader=Expect</span></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/assets/js/APlayer.min.js&quot; cla</summary>
      
    
    
    
    <category term="技术" scheme="http://www.sealin.net/categories/%E6%8A%80%E6%9C%AF/"/>
    
    <category term="JAVA" scheme="http://www.sealin.net/categories/%E6%8A%80%E6%9C%AF/JAVA/"/>
    
    <category term="微服务" scheme="http://www.sealin.net/categories/%E6%8A%80%E6%9C%AF/JAVA/%E5%BE%AE%E6%9C%8D%E5%8A%A1/"/>
    
    
    <category term="JAVA" scheme="http://www.sealin.net/tags/JAVA/"/>
    
    <category term="SpringCloud" scheme="http://www.sealin.net/tags/SpringCloud/"/>
    
    <category term="Gateway" scheme="http://www.sealin.net/tags/Gateway/"/>
    
  </entry>
  
  <entry>
    <title>NextCloud集成OpenLdap实现单点登录</title>
    <link href="http://www.sealin.net/2021/04/23/docker-ldap/"/>
    <id>http://www.sealin.net/2021/04/23/docker-ldap/</id>
    <published>2021-04-23T06:13:16.000Z</published>
    <updated>2023-05-23T01:43:32.478Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="LDAP部署"><a href="#LDAP部署" class="headerlink" title="LDAP部署"></a>LDAP部署</h1><p>openLdap是一套开源的AD域管理工具(不过看起来很复古, 不知道有没有更好用的替代方案)</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">docker run \</span><br><span class="line">    -d \</span><br><span class="line">    -p 389:389 \</span><br><span class="line">    -p 636:636 \</span><br><span class="line">    -v /data/openldap/ldap:/var/lib/ldap \</span><br><span class="line">    -v /data/openldap/slapd.d:/etc/ldap/slapd.d \</span><br><span class="line">    --env LDAP_ORGANISATION=&quot;org&quot; \</span><br><span class="line">    --env LDAP_DOMAIN=&quot;sealin.net&quot; \</span><br><span class="line">    --env LDAP_ADMIN_PASSWORD=&quot;123456&quot; \</span><br><span class="line">    --name openldap \</span><br><span class="line">    --hostname openldap-host\</span><br><span class="line">    osixia/openldap:1.4.0</span><br></pre></td></tr></table></figure><p>版本建议用1.4.0, 更高版本经测试在nextcloud中获取分组存在问题</p><h1 id="phpLdapAdmin安装"><a href="#phpLdapAdmin安装" class="headerlink" title="phpLdapAdmin安装"></a>phpLdapAdmin安装</h1><p>phpLdapAdmin是管理ldap数据的客户端</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">docker run \</span><br><span class="line">-p 8080:80 \</span><br><span class="line">--privileged \</span><br><span class="line">--name ldap-admin \</span><br><span class="line">--env PHPLDAPADMIN_HTTPS=false \</span><br><span class="line">--env PHPLDAPADMIN_LDAP_HOSTS=192.168.11.84 \</span><br><span class="line">--detach osixia/phpldapadmin</span><br></pre></td></tr></table></figure><p>使用时将 <code>192.168.11.84</code>替换为ldap的部署地址</p><h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><p>在浏览器打开phpLdapAdmin: <a href="http://ip:8080/">http://ip:8080/</a></p><h2 id="登陆"><a href="#登陆" class="headerlink" title="登陆"></a>登陆</h2><p>用户名格式:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cn=admin,dc=sealin,dc=net</span><br></pre></td></tr></table></figure><p>dc为启动ldap实例时的 –env LDAP_DOMAIN&#x3D;”sealin.net”值, 以.分隔为多个dc,如:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># 如果域名为: sealin.net.cn, 对应的用户名为</span><br><span class="line">cn=admin,dc=sealin,dc=net,dc=cn</span><br></pre></td></tr></table></figure><h2 id="创建用户"><a href="#创建用户" class="headerlink" title="创建用户"></a>创建用户</h2><p><code>Create new entry here</code></p><p>先创建:<code>Samba: Domain</code>, 产生一个SID<br>接着创建分组:<code>Samba: Group Mapping</code><br>然后创建用户: <code>Samba: Account</code><br>为用户添加显示名称字段:<br>在左侧选中刚刚添加的用户, 在界面上打开此功能: <code>Add new attribute</code>, 在下拉框中选择<code>displayName</code>, 填写要用于显示的名称.</p><h1 id="配置NextCloud"><a href="#配置NextCloud" class="headerlink" title="配置NextCloud"></a>配置NextCloud</h1><p>首先从<code>设置-应用</code>界面启用插件, 默认是关闭的:<br><code>LDAP user and group backend</code><br>启用该插件后, 在<code>设置</code>界面左侧, 会多出一项<code>LDAP-AD整合</code></p><h2 id="填写服务器地址"><a href="#填写服务器地址" class="headerlink" title="填写服务器地址"></a>填写服务器地址</h2><p>填入服务地址(不填写端口), 然后点<code>检测端口</code>, 没问题的话会检测出我们启动的端口:389</p><h2 id="填写用户信息"><a href="#填写用户信息" class="headerlink" title="填写用户信息"></a>填写用户信息</h2><p>按照上述用户名格式, 填写用户和密码, 接着点<code>保存凭据</code></p><h2 id="测试连接"><a href="#测试连接" class="headerlink" title="测试连接"></a>测试连接</h2><p>依次点下方的<code>检测基础DN</code> – <code>测试基础DN</code><br>如无意外, 下方的状态标签会变成<code>配置完成</code>, 并附带绿色圆点</p><h2 id="用户选项卡"><a href="#用户选项卡" class="headerlink" title="用户选项卡"></a>用户选项卡</h2><p>上一步通过后, 点<code>继续</code>按钮, 在<code>用户</code>选项卡的<code>只有这些对象类：</code>选项中, 选择<code>inetOrgPerson</code>, 选好以后可以点击左下方的<code>验证设置和统计用户</code>, 如果旁边显示<code>发现 1 个用户</code>, 说明配置通过, 可以<code>继续</code></p><h2 id="登陆属性选项卡"><a href="#登陆属性选项卡" class="headerlink" title="登陆属性选项卡"></a>登陆属性选项卡</h2><p>在此处, 可以配置自定义的字段用于nextcloud的登陆用户名, 选择需要的字段, 点<code>继续</code></p><h2 id="群组选项卡"><a href="#群组选项卡" class="headerlink" title="群组选项卡"></a>群组选项卡</h2><p>此选项卡, 可以限制nextcloud从哪些组获取ldap中的用户信息, 选择好需要的分组后, 点<code>验证设置和统计分组数</code>, 提示<code>发现 * 个分组</code>, 说明配置无误.此时, 我们的nextcloud已经集成了ldap的数据, 不过有些小问题需要处理</p><h2 id="显示自定义用户名"><a href="#显示自定义用户名" class="headerlink" title="显示自定义用户名"></a>显示自定义用户名</h2><p>在nextcloud的用户管理界面, 可以看到ldap的用户名称上显示了一串UUID, 不易于用户理解.<br>我们可以回到nextcloud中的ldap配置界面, 打开右侧的<code>砖家</code>功能.<br>修改<code>用户 UUID 属性：</code>这一项的值, 改成ldap用户信息中存在的字段, 比如默认带的<code>sn</code>字段, 填上sn<br>改完以后, <code>清除用户-LDAP用户映射</code>, 再回到nextcloud用户管理界面, 可以发现用户名已显示正常</p><h1 id="结语"><a href="#结语" class="headerlink" title="结语"></a>结语</h1><p>ldap支持为用户创建自定义属性, 结合nextcloud配置LDAP界面<code>高级</code>-<code>特殊属性</code>设置, 基本用户同步过来后可以初始化所有信息, 如配额, 邮箱等.当然也有一些限制, 在nextcloud中创建用户无法选择ldap中的分组, 也就是只能通过LDAP创建用户给cloud用, cloud无法向ldap中添加用户, 如果用户较多的话无法让各组分而治之, 管理ldap的人亚历山大.</p>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/assets/js/APlayer.min.js&quot; cla</summary>
      
    
    
    
    <category term="折腾实录" scheme="http://www.sealin.net/categories/%E6%8A%98%E8%85%BE%E5%AE%9E%E5%BD%95/"/>
    
    
    <category term="基础服务" scheme="http://www.sealin.net/tags/%E5%9F%BA%E7%A1%80%E6%9C%8D%E5%8A%A1/"/>
    
    <category term="nextcloud" scheme="http://www.sealin.net/tags/nextcloud/"/>
    
    <category term="LDAP" scheme="http://www.sealin.net/tags/LDAP/"/>
    
  </entry>
  
  <entry>
    <title>Mac Parallels16 弹窗解决</title>
    <link href="http://www.sealin.net/2021/03/19/parallels-desktop-alert/"/>
    <id>http://www.sealin.net/2021/03/19/parallels-desktop-alert/</id>
    <published>2021-03-19T02:08:42.000Z</published>
    <updated>2023-05-23T01:43:32.495Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h3 id="This-copy-of-Parallels-Desktop-may-not-be-genuine"><a href="#This-copy-of-Parallels-Desktop-may-not-be-genuine" class="headerlink" title="This copy of Parallels Desktop may not be genuine."></a>This copy of Parallels Desktop may not be genuine.</h3><p><img src="https://i.ibb.co/kMFBP7t/Message.png" alt="Message"></p><p>升级PD16后, 在win虚拟机里老是提示可能是盗版软件的受害(yi)者, 下面提供一个方法来屏蔽这个问题</p><h2 id="解决"><a href="#解决" class="headerlink" title="解决"></a>解决</h2><ol><li>在任务管理器关闭<code>Parallels Control Center</code> 这个进程</li></ol>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/assets/js/APlayer.min.js&quot; cla</summary>
      
    
    
    
    <category term="工具" scheme="http://www.sealin.net/categories/%E5%B7%A5%E5%85%B7/"/>
    
    
    <category term="工具" scheme="http://www.sealin.net/tags/%E5%B7%A5%E5%85%B7/"/>
    
    <category term="parallels-desktop" scheme="http://www.sealin.net/tags/parallels-desktop/"/>
    
  </entry>
  
  <entry>
    <title>MacOs修改Mailto链接默认打开方式</title>
    <link href="http://www.sealin.net/2021/01/21/Macos-mailto/"/>
    <id>http://www.sealin.net/2021/01/21/Macos-mailto/</id>
    <published>2021-01-21T01:36:51.000Z</published>
    <updated>2023-05-23T01:43:32.477Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>装了edge后, mailto链接都会使用edge打开, 并且跳转到gmail, 研究了半天, 找到了关掉这个设置的地方.</p><p>在edge打开这个设置界面:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">edge://settings/content/handlers</span><br></pre></td></tr></table></figure><p>删除 mailto 链接的gmail, 或者关掉这个设置.</p>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/assets/js/APlayer.min.js&quot; cla</summary>
      
    
    
    
    <category term="工具" scheme="http://www.sealin.net/categories/%E5%B7%A5%E5%85%B7/"/>
    
    
    <category term="MAC" scheme="http://www.sealin.net/tags/MAC/"/>
    
    <category term="mailto" scheme="http://www.sealin.net/tags/mailto/"/>
    
    <category term="edge" scheme="http://www.sealin.net/tags/edge/"/>
    
  </entry>
  
  <entry>
    <title>mac vm 序列号</title>
    <link href="http://www.sealin.net/2021/01/12/mac-vm-sn/"/>
    <id>http://www.sealin.net/2021/01/12/mac-vm-sn/</id>
    <published>2021-01-12T02:17:59.000Z</published>
    <updated>2023-05-23T01:43:32.493Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>截止发文日期最新版测试通过.</p><p>升级bigsur后, PD问题更多了, 不得已还是用VM.<br>提供几个可以用的号.</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">ZF3R0-FHED2-M80TY-8QYGC-NPKYF</span><br><span class="line">YF390-0HF8P-M81RQ-2DXQE-M2UT6</span><br><span class="line">ZF71R-DMX85-08DQY-8YMNC-PPHV8</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/assets/js/APlayer.min.js&quot; cla</summary>
      
    
    
    
    <category term="工具" scheme="http://www.sealin.net/categories/%E5%B7%A5%E5%85%B7/"/>
    
    
    <category term="工具" scheme="http://www.sealin.net/tags/%E5%B7%A5%E5%85%B7/"/>
    
  </entry>
  
  <entry>
    <title>MAC删除默认ABC输入法</title>
    <link href="http://www.sealin.net/2020/10/12/mac-input/"/>
    <id>http://www.sealin.net/2020/10/12/mac-input/</id>
    <published>2020-10-12T13:06:26.000Z</published>
    <updated>2023-05-23T01:43:32.493Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="翻车"><a href="#翻车" class="headerlink" title="翻车"></a>翻车</h1><p>用了一年mac自带的输入法, 本以为调教一段时间总会变得好使, 事实证明还是在下输了.<br>比如打字的时候现在已经落下打全拼的后遗症了, 比如以前习惯的打”是”, 只需要打一个s一般空格就可以了, 默认第一个就是”是”字, 但是mac的输入法偏不, 过了这么久第一个80%的时间会打出”说”; 比如要打”的”, 以前打个d空格就可以了, mac自带的输入法80%几率可能会打出”到”…另外没办法在中文模式下使用英文标点, 很误事.<br>为什么是80%?当你再次打出s准备选第二个选项的时候, 可能候选顺序已经变了<img src="/images/2020/10/12/9cbb099b-e60c-43ed-b39a-b371b25e879f.png" alt="image.png"></p><h1 id="拖车"><a href="#拖车" class="headerlink" title="拖车"></a>拖车</h1><p>没辙, 还是放弃直接换某狗吧, 毕竟用了这么多年还是很顺手的.</p><h1 id="修车"><a href="#修车" class="headerlink" title="修车"></a>修车</h1><p>用某狗有个问题, mac输入法默认了一个ABC输入法, 还不能在设置里面删除, 切换应用很可能自动变回ABC输入法, 又要⌘+空格切换一次, 似乎不太完美.<br>找到某乎一帖子<br><a href="https://www.zhihu.com/question/21459701/answer/478489248">https://www.zhihu.com/question/21459701/answer/478489248</a><br>大致方案如下:</p><h2 id="扳手"><a href="#扳手" class="headerlink" title="扳手"></a>扳手</h2><p>PlistEdit Pro</p><h2 id="找螺丝"><a href="#找螺丝" class="headerlink" title="找螺丝"></a>找螺丝</h2><p>~&#x2F;Library&#x2F;Preferences&#x2F;com.apple.HIToolbox.plist</p><h2 id="拧螺丝"><a href="#拧螺丝" class="headerlink" title="拧螺丝"></a>拧螺丝</h2><p>找到enabled input source这个分组, 展开里面的明细(我这里有7个), 明细也能展开, 里面有3个键值对, 删掉name&#x3D;ABC的配置项</p><h2 id="上路"><a href="#上路" class="headerlink" title="上路"></a>上路</h2><p>注销重新登录就好了<br><img src="/images/2020/10/12/9ad9700b-ee86-458e-8c34-6cfe7d47071c.png" alt="image.png"><br>不好意思, 配错图了<br><img src="/images/2020/10/12/11494556-a119-439c-ad56-640f3adb2d4f.png" alt="image.png"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/assets/js/APlayer.min.js&quot; cla</summary>
      
    
    
    
    <category term="工具" scheme="http://www.sealin.net/categories/%E5%B7%A5%E5%85%B7/"/>
    
    <category term="折腾实录" scheme="http://www.sealin.net/categories/%E5%B7%A5%E5%85%B7/%E6%8A%98%E8%85%BE%E5%AE%9E%E5%BD%95/"/>
    
    
    <category term="工具" scheme="http://www.sealin.net/tags/%E5%B7%A5%E5%85%B7/"/>
    
    <category term="基础服务" scheme="http://www.sealin.net/tags/%E5%9F%BA%E7%A1%80%E6%9C%8D%E5%8A%A1/"/>
    
  </entry>
  
  <entry>
    <title>连接VPN后无法调试本地Dubbo服务的问题</title>
    <link href="http://www.sealin.net/2020/09/13/dubbo-ip/"/>
    <id>http://www.sealin.net/2020/09/13/dubbo-ip/</id>
    <published>2020-09-13T07:29:22.000Z</published>
    <updated>2023-05-23T01:43:32.479Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h1><p>连接VPN或者创建多个网卡后(如安装虚拟机&#x2F;docker等服务), 本机会存在多个IP地址, 这种情况下, 启动本地服务提供者后, 创建的dubbo服务绑定的网卡可能会无法准确找到物理网卡地址, 导致消费端启动后无法找到服务.</p><h1 id="问题分析"><a href="#问题分析" class="headerlink" title="问题分析"></a>问题分析</h1><p>通过查看dubbo的源码, 可以发现获取IP地址的事情是调用jdk提供的类: java.net.InetAddress#getLocalHost<br>主要逻辑如下:</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> InetAddress <span class="title function_">getLocalHost</span><span class="params">()</span> <span class="keyword">throws</span> UnknownHostException &#123;</span><br><span class="line"></span><br><span class="line">    <span class="type">SecurityManager</span> <span class="variable">security</span> <span class="operator">=</span> System.getSecurityManager();</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        <span class="type">String</span> <span class="variable">local</span> <span class="operator">=</span> impl.getLocalHostName();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (security != <span class="literal">null</span>) &#123;</span><br><span class="line">            security.checkConnect(local, -<span class="number">1</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (local.equals(<span class="string">&quot;localhost&quot;</span>)) &#123;</span><br><span class="line">            <span class="keyword">return</span> impl.loopbackAddress();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="type">InetAddress</span> <span class="variable">ret</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">        <span class="keyword">synchronized</span> (cacheLock) &#123;</span><br><span class="line">            <span class="type">long</span> <span class="variable">now</span> <span class="operator">=</span> System.currentTimeMillis();</span><br><span class="line">            <span class="keyword">if</span> (cachedLocalHost != <span class="literal">null</span>) &#123;</span><br><span class="line">                <span class="keyword">if</span> ((now - cacheTime) &lt; maxCacheTime) <span class="comment">// Less than 5s old?</span></span><br><span class="line">                    ret = cachedLocalHost;</span><br><span class="line">                <span class="keyword">else</span></span><br><span class="line">                    cachedLocalHost = <span class="literal">null</span>;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="comment">// we are calling getAddressesFromNameService directly</span></span><br><span class="line">            <span class="comment">// to avoid getting localHost from cache</span></span><br><span class="line">            <span class="keyword">if</span> (ret == <span class="literal">null</span>) &#123;</span><br><span class="line">                InetAddress[] localAddrs;</span><br><span class="line">                <span class="keyword">try</span> &#123;</span><br><span class="line">                    localAddrs =</span><br><span class="line">                        InetAddress.getAddressesFromNameService(local, <span class="literal">null</span>);</span><br><span class="line">                &#125; <span class="keyword">catch</span> (UnknownHostException uhe) &#123;</span><br><span class="line">                    <span class="comment">// Rethrow with a more informative error message.</span></span><br><span class="line">                    <span class="type">UnknownHostException</span> <span class="variable">uhe2</span> <span class="operator">=</span></span><br><span class="line">                        <span class="keyword">new</span> <span class="title class_">UnknownHostException</span>(local + <span class="string">&quot;: &quot;</span> +</span><br><span class="line">                                                 uhe.getMessage());</span><br><span class="line">                    uhe2.initCause(uhe);</span><br><span class="line">                    <span class="keyword">throw</span> uhe2;</span><br><span class="line">                &#125;</span><br><span class="line">                cachedLocalHost = localAddrs[<span class="number">0</span>];</span><br><span class="line">                cacheTime = now;</span><br><span class="line">                ret = localAddrs[<span class="number">0</span>];</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> ret;</span><br><span class="line">    &#125; <span class="keyword">catch</span> (java.lang.SecurityException e) &#123;</span><br><span class="line">        <span class="keyword">return</span> impl.loopbackAddress();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>大致流程为: 获取当前主机名 –&gt; 检查主机名是否可以连接 –&gt; 如果主机名为localhost, 直接获取本地回环地址(一般为127.0.0.1) –&gt; 查询nameService获取当前主机名的实际地址</p><p>可以发现这个地址在获取的过程中, 是需要去查询域名解析服务的, 域名解析流程首先会从本地hosts文件中获取地址, 也就是说, 我们只需要设置一个跟主机名一样的地址到hosts文件中, 就可以让dubbo获取到自己想要的地址了.<br><img src="/images/2020/09/13/ada1bf87-958d-411e-ba23-722d8439d032.png" alt="image.png"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/assets/js/APlayer.min.js&quot; cla</summary>
      
    
    
    
    <category term="技术" scheme="http://www.sealin.net/categories/%E6%8A%80%E6%9C%AF/"/>
    
    <category term="JAVA" scheme="http://www.sealin.net/categories/%E6%8A%80%E6%9C%AF/JAVA/"/>
    
    <category term="经验" scheme="http://www.sealin.net/categories/%E6%8A%80%E6%9C%AF/JAVA/%E7%BB%8F%E9%AA%8C/"/>
    
    
    <category term="JAVA" scheme="http://www.sealin.net/tags/JAVA/"/>
    
  </entry>
  
  <entry>
    <title>Java死锁排查</title>
    <link href="http://www.sealin.net/2020/08/14/java-dead-lock/"/>
    <id>http://www.sealin.net/2020/08/14/java-dead-lock/</id>
    <published>2020-08-14T03:24:59.000Z</published>
    <updated>2023-05-23T01:43:32.480Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="模拟死锁"><a href="#模拟死锁" class="headerlink" title="模拟死锁"></a>模拟死锁</h1><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * </span></span><br><span class="line"><span class="comment"> * Company: 锦海捷亚</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Sealin</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2020/8/14</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">TestDeadLock</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">Object</span> <span class="variable">lock1</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Object</span>();</span><br><span class="line">        <span class="type">Object</span> <span class="variable">lock2</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Object</span>();</span><br><span class="line">        <span class="type">Thread</span> <span class="variable">thread1</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Thread</span>(() -&gt; &#123;</span><br><span class="line">            <span class="keyword">synchronized</span> (lock1) &#123;</span><br><span class="line">                <span class="keyword">try</span> &#123;</span><br><span class="line">                    Thread.sleep(<span class="number">1000</span>);</span><br><span class="line">                    <span class="keyword">synchronized</span> (lock2) &#123;</span><br><span class="line"></span><br><span class="line">                    &#125;</span><br><span class="line">                &#125; <span class="keyword">catch</span> (InterruptedException e) &#123;</span><br><span class="line">                    e.printStackTrace();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line">        <span class="type">Thread</span> <span class="variable">thread2</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Thread</span>(() -&gt; &#123;</span><br><span class="line">            <span class="keyword">synchronized</span> (lock2) &#123;</span><br><span class="line">                <span class="keyword">try</span> &#123;</span><br><span class="line">                    Thread.sleep(<span class="number">1000</span>);</span><br><span class="line">                    <span class="keyword">synchronized</span> (lock1) &#123;</span><br><span class="line"></span><br><span class="line">                    &#125;</span><br><span class="line">                &#125; <span class="keyword">catch</span> (InterruptedException e) &#123;</span><br><span class="line">                    e.printStackTrace();</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line">        thread1.start();</span><br><span class="line">        thread2.start();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="原因分析"><a href="#原因分析" class="headerlink" title="原因分析"></a>原因分析</h2><p>执行以上代码, 发现程序一直在执行, 没有按预期的流程正常退出.<br>导致死锁的原因, 只是因为不同线程之间相互持有了所需资源, 并且都在等对方释放,自己才能继续执行后续代码. 如同两个都只拿了一根筷子的人, 都打算让对方先把手上都筷子交给自己, 自己吃完饭再把筷子交出去一样, 双方都在等待, 导致的结果就是死锁.</p><h1 id="错误排查"><a href="#错误排查" class="headerlink" title="错误排查"></a>错误排查</h1><p>首先找到当前应用的PID, 使用jdk提供的jps命令.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">sealin@Sealin: ~ $ jps                                                                                                                                                                                </span><br><span class="line">87696 TestDeadLock</span><br><span class="line">87840 Jps</span><br><span class="line">86931 RemoteMavenServer36</span><br></pre></td></tr></table></figure><p>可以找到我们测试死锁的进程pid为: 87696<br>使用jstack工具查看当前进程信息</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">sealin@Sealin: ~ $ jstack 87696   </span><br><span class="line"></span><br><span class="line">....省略部分内容....</span><br><span class="line"></span><br><span class="line">===================================================</span><br><span class="line"><span class="string">&quot;Thread-1&quot;</span>:</span><br><span class="line">        at com.jhj.winform.server.TestDeadLock.lambda$main<span class="variable">$1</span>(TestDeadLock.java:33)</span><br><span class="line">        - waiting to lock &lt;0x000000071625f360&gt; (a java.lang.Object)</span><br><span class="line">        - locked &lt;0x000000071625f370&gt; (a java.lang.Object)</span><br><span class="line">        at com.jhj.winform.server.TestDeadLock$$Lambda<span class="variable">$2</span>/325333723.run(Unknown Source)</span><br><span class="line">        at java.lang.Thread.run(Thread.java:748)</span><br><span class="line"><span class="string">&quot;Thread-0&quot;</span>:</span><br><span class="line">        at com.jhj.winform.server.TestDeadLock.lambda$main<span class="variable">$0</span>(TestDeadLock.java:20)</span><br><span class="line">        - waiting to lock &lt;0x000000071625f370&gt; (a java.lang.Object)</span><br><span class="line">        - locked &lt;0x000000071625f360&gt; (a java.lang.Object)</span><br><span class="line">        at com.jhj.winform.server.TestDeadLock$$Lambda<span class="variable">$1</span>/2066940133.run(Unknown Source)</span><br><span class="line">        at java.lang.Thread.run(Thread.java:748)</span><br><span class="line"></span><br><span class="line">Found 1 deadlock.</span><br></pre></td></tr></table></figure><p><img src="/images/2020/08/14/16ae44bd-5755-429d-86cc-524336b95248.png" alt="image.png"><br>很明显的可以看到死锁发生的位置, 进入 TestDeadLock.java:33 和 TestDeadLock.java:20 查看执行的什么操作导致了死锁<br><img src="/images/2020/08/14/d0e2e766-6624-41b2-8ff4-71980db10409.png" alt="image.png"><br>第33行是我们thread2对lock1进行加锁的位置<br><img src="/images/2020/08/14/59b2d73a-207c-47d9-972d-523c536ac904.png" alt="image.png"><br>第20行是thread1对lock2进行加锁的位置.与我们上面分析的原因一致, 相互等待对方释放锁资源.</p><h1 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案"></a>解决方案</h1><p>既然知道原因了, 解决起来也就有方向了, 在本示例中, 只要让线程1和线程2不要同时执行就可以解决问题, 当然实际应用中死锁问题解决起来会复杂很多.</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">       thread1.start();</span><br><span class="line"><span class="comment">// 主线程等待thread1执行完再开始执行thread2, 即可避免资源竞争</span></span><br><span class="line">       thread1.join();</span><br><span class="line">       thread2.start();</span><br></pre></td></tr></table></figure><p><img src="/images/2020/08/14/b6036e89-fe94-4b60-8d90-d6e18bc621bb.png" alt="image.png"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/assets/js/APlayer.min.js&quot; cla</summary>
      
    
    
    
    <category term="JAVA" scheme="http://www.sealin.net/categories/JAVA/"/>
    
    <category term="技术" scheme="http://www.sealin.net/categories/JAVA/%E6%8A%80%E6%9C%AF/"/>
    
    <category term="经验" scheme="http://www.sealin.net/categories/JAVA/%E6%8A%80%E6%9C%AF/%E7%BB%8F%E9%AA%8C/"/>
    
    
    <category term="JAVA" scheme="http://www.sealin.net/tags/JAVA/"/>
    
  </entry>
  
  <entry>
    <title>Docker多宿主机通信</title>
    <link href="http://www.sealin.net/2020/08/13/docker-route/"/>
    <id>http://www.sealin.net/2020/08/13/docker-route/</id>
    <published>2020-08-13T08:30:38.000Z</published>
    <updated>2023-05-23T01:43:32.479Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="平台"><a href="#平台" class="headerlink" title="平台"></a>平台</h1><p>CentOS</p><h1 id="方案"><a href="#方案" class="headerlink" title="方案"></a>方案</h1><p>添加静态路由<br>本文中, docker网段如下:<br>172.17.10.0&#x2F;24<br>172.17.11.0&#x2F;24<br>分别对应宿主机IP<br>192.168.1.10<br>192.168.1.11</p><h2 id="临时路由"><a href="#临时路由" class="headerlink" title="临时路由"></a>临时路由</h2><p>在.10主机添加11的静态路由</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo ip route add 172.17.11.0/24 via 192.168.1.11 dev eth0</span><br></pre></td></tr></table></figure><p>在.11主机添加10的静态路由</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo ip route add 172.17.10.0/24 via 192.168.1.10 dev eth0</span><br></pre></td></tr></table></figure><h2 id="永久方案"><a href="#永久方案" class="headerlink" title="永久方案"></a>永久方案</h2><p>以上命令执行后立即生效, 在10可以ping通11的docker网段, 反之也一样, 不过重启后失效, 需要再次配置. 可以把上述路由规则写入网卡路由配置文件.<br>.10执行</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo vim /etc/sysconfig/network-scripts/route-eth0</span><br></pre></td></tr></table></figure><p>添加一行</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">172.17.11.0/24 via 192.168.1.11 dev eth0</span><br></pre></td></tr></table></figure><p>.11执行</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo vim /etc/sysconfig/network-scripts/route-eth0</span><br></pre></td></tr></table></figure><p>添加一行</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">172.17.10.0/24 via 192.168.1.10 dev eth0</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/assets/js/APlayer.min.js&quot; cla</summary>
      
    
    
    
    <category term="经验" scheme="http://www.sealin.net/categories/%E7%BB%8F%E9%AA%8C/"/>
    
    <category term="环境配置" scheme="http://www.sealin.net/categories/%E7%BB%8F%E9%AA%8C/%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/"/>
    
    
    <category term="Docker" scheme="http://www.sealin.net/tags/Docker/"/>
    
    <category term="CentOS" scheme="http://www.sealin.net/tags/CentOS/"/>
    
  </entry>
  
  <entry>
    <title>centos7宿主机无法与docker通信问题解决</title>
    <link href="http://www.sealin.net/2020/07/10/docker-unreachable/"/>
    <id>http://www.sealin.net/2020/07/10/docker-unreachable/</id>
    <published>2020-07-10T02:14:15.000Z</published>
    <updated>2023-05-23T01:43:32.479Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h1><p>centos7安装docker后, 宿主机ping容器地址出现以下错误:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[root@fileserver ~]<span class="comment"># ping 172.17.78.2</span></span><br><span class="line">PING 172.17.78.2 (172.17.78.2) 56(84) bytes of data.</span><br><span class="line">From 172.17.78.1 icmp_seq=1 Destination Host Unreachable</span><br><span class="line">From 172.17.78.1 icmp_seq=2 Destination Host Unreachable</span><br><span class="line">From 172.17.78.1 icmp_seq=3 Destination Host Unreachable</span><br><span class="line">From 172.17.78.1 icmp_seq=4 Destination Host Unreachable</span><br></pre></td></tr></table></figure><p><img src="/images/2020/07/10/65a9b4d4-7693-41f1-815f-9af3c88c8bb8.png" alt="image.png"></p><h1 id="解决方案1"><a href="#解决方案1" class="headerlink" title="解决方案1"></a>解决方案1</h1><p>关闭防火墙</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ sudo systemctl stop iptables</span><br><span class="line">$ sudo systemctl <span class="built_in">disable</span> iptables</span><br><span class="line">$ sudo systemctl stop firewalld</span><br><span class="line">$ sudo systemctl <span class="built_in">disable</span> firewalld</span><br></pre></td></tr></table></figure><p>关闭selinux</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># vi /etc/selinux/config</span></span><br></pre></td></tr></table></figure><p>将 <strong>SELINUX&#x3D;enforcing</strong> 改为 <strong>SELINUX&#x3D;disabled</strong></p><p>当然也可以根据实际需要添加防火墙规则, 不过要是通过docker-compose启动容器,可能会创建docker0之外的网卡,要再次添加规则,比较麻烦.</p><h1 id="解决方案2"><a href="#解决方案2" class="headerlink" title="解决方案2"></a>解决方案2</h1><p>启动时使用主机网络, 启动时加上–net&#x3D;host</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ docker run -d --name <span class="built_in">test</span> --net=host image:1.0</span><br></pre></td></tr></table></figure><p>这个方案的弊端比较明显, 容器需要开放的端口不能指定, 会直接启动到宿主机的端口上, 要是有其他服务在用这个端口就启动不了容器了.</p><h1 id="解决方案3"><a href="#解决方案3" class="headerlink" title="解决方案3"></a>解决方案3</h1><p>如果已经确认防火墙关闭了, 不能访问容器也不想使用主机网络模式,可以升级内核试试.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">## 查看当前内核版本</span></span><br><span class="line"><span class="comment"># uname -r</span></span><br><span class="line">3.10.0-327.el7.x86_64</span><br><span class="line"><span class="comment">## 导入内核源</span></span><br><span class="line"><span class="comment"># rpm -import https://www.elrepo.org/RPM-GPG-KEY-elrepo.org</span></span><br><span class="line"><span class="comment"># rpm -Uvh http://www.elrepo.org/elrepo-release-7.0-2.el7.elrepo.noarch.rpm</span></span><br><span class="line"><span class="comment"># yum --enablerepo=elrepo-kernel install -y kernel-ml</span></span><br><span class="line"></span><br><span class="line"><span class="comment">## 安装完后, 查看内核列表</span></span><br><span class="line"><span class="comment"># cat /boot/grub2/grub.cfg |grep menuentry</span></span><br><span class="line">menuentry <span class="string">&#x27;CentOS Linux (5.7.8-1.el7.elrepo.x86_64) 7 (Core)&#x27;</span> --class centos --class gnu-linux --class gnu --class os --unrestricted <span class="variable">$menuentry_id_option</span> <span class="string">&#x27;gnulinux-3.10.0-327.el7.x86_64-advanced-3bfef048-3886-4956-9ec3-7bdbfa7f6726&#x27;</span> &#123;</span><br><span class="line">menuentry <span class="string">&#x27;CentOS Linux (3.10.0-327.el7.x86_64) 7 (Core)&#x27;</span> --class centos --class gnu-linux --class gnu --class os --unrestricted <span class="variable">$menuentry_id_option</span> <span class="string">&#x27;gnulinux-3.10.0-327.el7.x86_64-advanced-3bfef048-3886-4956-9ec3-7bdbfa7f6726&#x27;</span> &#123;</span><br><span class="line">...</span><br><span class="line"></span><br><span class="line"><span class="comment">## 设置默认启动高版本内核, 注意替换版本为上面查询得到的版本号</span></span><br><span class="line"><span class="comment"># grub2-set-default &#x27;CentOS Linux (5.7.8-1.el7.elrepo.x86_64) 7 (Core)&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">## 重启</span></span><br><span class="line"><span class="comment"># reboot</span></span><br><span class="line"></span><br><span class="line"><span class="comment">## 再次查看版本</span></span><br><span class="line"><span class="comment"># uname -r</span></span><br><span class="line">5.7.8-1.el7.elrepo.x86_64</span><br></pre></td></tr></table></figure><p>再ping容器试试, 要是依然无法解决此问题, 关键时刻别忘了运维三法宝:</p><h2 id="重启"><a href="#重启" class="headerlink" title="重启"></a>重启</h2><h2 id="重装"><a href="#重装" class="headerlink" title="重装"></a>重装</h2><h2 id="换电脑"><a href="#换电脑" class="headerlink" title="换电脑"></a>换电脑</h2><p>再见~</p>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/assets/js/APlayer.min.js&quot; cla</summary>
      
    
    
    
    <category term="环境配置" scheme="http://www.sealin.net/categories/%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/"/>
    
    
    <category term="基础服务" scheme="http://www.sealin.net/tags/%E5%9F%BA%E7%A1%80%E6%9C%8D%E5%8A%A1/"/>
    
    <category term="Docker" scheme="http://www.sealin.net/tags/Docker/"/>
    
    <category term="CentOS" scheme="http://www.sealin.net/tags/CentOS/"/>
    
  </entry>
  
  <entry>
    <title>Mac下iTerm2使用电池时滚动不连贯</title>
    <link href="http://www.sealin.net/2020/06/28/mac-iterm-power/"/>
    <id>http://www.sealin.net/2020/06/28/mac-iterm-power/</id>
    <published>2020-06-28T02:19:59.000Z</published>
    <updated>2023-05-23T01:43:32.493Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h1><p>拔掉电源线使用笔记本时, 在iterm2中滚动输出结果时发现终端好像变卡了, 柔顺的感觉没有了,看的很难受.</p><h1 id="解决"><a href="#解决" class="headerlink" title="解决"></a>解决</h1><p>General - Magic - Advanced GPU Settings<br><img src="/images/2020/06/28/fc439d1c-b4bc-48a9-b081-b0d93e3e4251.png" alt="image.png"></p><p>关闭此项<br><img src="/images/2020/06/28/007c3c9b-1add-4141-b7d6-39b6820eba4c.png" alt="image.png"></p><p>比德芙还丝滑的感觉回来了😄</p>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/assets/js/APlayer.min.js&quot; cla</summary>
      
    
    
    
    <category term="工具" scheme="http://www.sealin.net/categories/%E5%B7%A5%E5%85%B7/"/>
    
    
    <category term="工具" scheme="http://www.sealin.net/tags/%E5%B7%A5%E5%85%B7/"/>
    
    <category term="MAC" scheme="http://www.sealin.net/tags/MAC/"/>
    
  </entry>
  
  <entry>
    <title>docker搭建nextcloud个人网盘在线编辑office文件</title>
    <link href="http://www.sealin.net/2020/06/10/nextcloud-office/"/>
    <id>http://www.sealin.net/2020/06/10/nextcloud-office/</id>
    <published>2020-06-10T03:37:35.000Z</published>
    <updated>2023-05-23T01:43:32.495Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="简述"><a href="#简述" class="headerlink" title="简述"></a>简述</h1><p>使用nextcloud运行网盘服务，再加入onlyoffice&#x2F;documentserver实现在线编辑功能。</p><h1 id="运行nextcloud"><a href="#运行nextcloud" class="headerlink" title="运行nextcloud"></a>运行nextcloud</h1><p>将以下几个目录持久化到宿主机，防止配置和数据丢失</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">/var/www/html/data</span><br><span class="line">/var/www/html/config</span><br><span class="line">/var/www/html/custom_apps</span><br></pre></td></tr></table></figure><p>同时，为容器传入redis环境变量，以触发nextcloud的缓存机制，缓存的环境变量名称可以通过 &#x2F;var&#x2F;www&#x2F;html&#x2F;config&#x2F;redis.config.php 看到，内容如下：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">if</span> (<span class="title function_ invoke__">getenv</span>(<span class="string">&#x27;REDIS_HOST&#x27;</span>)) &#123;</span><br><span class="line">  <span class="variable">$CONFIG</span> = <span class="keyword">array</span> (</span><br><span class="line">    <span class="string">&#x27;memcache.distributed&#x27;</span> =&gt; <span class="string">&#x27;\OC\Memcache\Redis&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;memcache.locking&#x27;</span> =&gt; <span class="string">&#x27;\OC\Memcache\Redis&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;redis&#x27;</span> =&gt; <span class="keyword">array</span>(</span><br><span class="line">      <span class="string">&#x27;host&#x27;</span> =&gt; <span class="title function_ invoke__">getenv</span>(<span class="string">&#x27;REDIS_HOST&#x27;</span>),</span><br><span class="line">      <span class="string">&#x27;port&#x27;</span> =&gt; <span class="title function_ invoke__">getenv</span>(<span class="string">&#x27;REDIS_HOST_PORT&#x27;</span>) ?: <span class="number">6379</span>,</span><br><span class="line">      <span class="string">&#x27;password&#x27;</span> =&gt; <span class="title function_ invoke__">getenv</span>(<span class="string">&#x27;REDIS_HOST_PASSWORD&#x27;</span>),</span><br><span class="line">    ),</span><br><span class="line">  );</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>可以看到如果存在REDIS_HOST这个环境变量，就可以触发缓存，我看网上很多文章的做法是修改apcu.config.php，手动加入以上redis配置代码块，感觉没这必要。<br>运行容器</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run -d --name cloud -p 888:80 -v /var/data/nextcloud/apps:/var/www/html/custom_apps -v /var/data/nextcloud/config:/var/www/html/config -v /var/data/nextcloud/data:/var/www/html/data -e REDIS_HOST=<span class="string">&#x27;192.168.11.83&#x27;</span> -e REDIS_HOST_PORT=<span class="string">&#x27;6380&#x27;</span> -e REDIS_HOST_PASSWORD=<span class="string">&#x27;your-password&#x27;</span> nextcloud:17.0.1</span><br></pre></td></tr></table></figure><p>启动后稍等片刻，访问<a href="http://ip:888，即可看到网盘安装界面。">http://ip:888，即可看到网盘安装界面。</a><br>推荐选择mysql作为数据库。</p><h1 id="安装onlyoffice服务"><a href="#安装onlyoffice服务" class="headerlink" title="安装onlyoffice服务"></a>安装onlyoffice服务</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run -i -t -d --name officeserver -p 51000:80 --restart=always onlyoffice/documentserver</span><br></pre></td></tr></table></figure><p>如果运行没问题，进入<a href="http://ip:51000可以看到如下界面">http://ip:51000可以看到如下界面</a><br><img src="/images/2020/06/10/4f2961cb-a0ea-4b71-bd1f-096af7ade94e.png" alt="image.png"></p><h1 id="安装nextcloud插件"><a href="#安装nextcloud插件" class="headerlink" title="安装nextcloud插件"></a>安装nextcloud插件</h1><p>由于国内网络环境不够因特乃熊，网盘里的插件管理界面99%的时间是打不开的，等两个小时也只能显示白板（至少我这边是这样）。<br>所以使用离线方式安装插件。</p><h2 id="下载插件"><a href="#下载插件" class="headerlink" title="下载插件"></a>下载插件</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /var/data/nextcloud/apps</span><br><span class="line">git <span class="built_in">clone</span> https://github.com/ONLYOFFICE/onlyoffice-nextcloud.git onlyoffice</span><br><span class="line"><span class="comment"># 33是nextcloud访问目录和文件需要的权限</span></span><br><span class="line"><span class="built_in">chown</span> -R 33:sealin onlyoffice</span><br></pre></td></tr></table></figure><h2 id="配置插件"><a href="#配置插件" class="headerlink" title="配置插件"></a>配置插件</h2><p>将插件源码下载到apps目录以后，最好重启下nextcloud,再去启用插件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker restart cloud</span><br></pre></td></tr></table></figure><p>重启后进入页面，到插件设置<br><img src="/images/2020/06/10/6bf4a030-6a95-44ad-b1a5-dcec1cf21edc.png" alt="image.png"></p><p>启用列表中新出现的onlyoffice插件<br><img src="/images/2020/06/10/ea543d47-0989-4ccc-8d82-07c6c1d47d74.png" alt="image.png"></p><p>启用完成后进入系统设置，左侧的选项会多出一个onlyoffice<br><img src="/images/2020/06/10/42687ab2-bab6-4860-b23a-532a69ad714c.png" alt="image.png"></p><p>填写自己的documentserver服务IP和端口<br><img src="/images/2020/06/10/adb9827d-64ac-4646-bf1c-739c62571243.png" alt="image.png"></p><p>点击保存后，如果验证51000端口的服务没问题，会出现允许使用在线编辑的格式选项。<br><img src="/images/2020/06/10/20cc66d3-c432-439b-8d26-f6ed3769b206.png" alt="image.png"></p><p>勾选需要的格式后，就可以到网盘主界面的文件列表中添加一个比如word文档，来试试在线编辑了。<br><img src="/images/2020/06/10/9d35969c-0d32-43fc-9349-4e4f4bc38d0b.png" alt="image.png"><br>可以看到多出来了几个新建文件的格式，试试word<br><img src="/images/2020/06/10/3aa69808-f4fb-4756-98d9-53d4f1fcf16d.png" alt="image.png"><br><img src="/images/2020/06/10/13bc3a09-4146-4ff6-a760-596c973535f4.png" alt="image.png"><br>带劲</p>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/assets/js/APlayer.min.js&quot; cla</summary>
      
    
    
    
    <category term="工具" scheme="http://www.sealin.net/categories/%E5%B7%A5%E5%85%B7/"/>
    
    
    <category term="nextcloud" scheme="http://www.sealin.net/tags/nextcloud/"/>
    
    <category term="网盘" scheme="http://www.sealin.net/tags/%E7%BD%91%E7%9B%98/"/>
    
    <category term="在线文档" scheme="http://www.sealin.net/tags/%E5%9C%A8%E7%BA%BF%E6%96%87%E6%A1%A3/"/>
    
  </entry>
  
  <entry>
    <title>Nexus3作为Docker仓库登陆401</title>
    <link href="http://www.sealin.net/2020/06/01/nexus-docker/"/>
    <id>http://www.sealin.net/2020/06/01/nexus-docker/</id>
    <published>2020-06-01T06:16:56.000Z</published>
    <updated>2023-05-23T01:43:32.495Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="问题："><a href="#问题：" class="headerlink" title="问题："></a>问题：</h1><p>配好了docker仓库，但是在客户端使用</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker login -u admin -p admin 服务器地址:端口</span><br></pre></td></tr></table></figure><p>提示认证失败，401.<br><img src="/images/2020/06/01/1870e0f0-a3cf-11ea-90bc-1986d0282c7a.png" alt="image.png"><br>经过反复验证用户名密码无误。</p><h1 id="解决"><a href="#解决" class="headerlink" title="解决"></a>解决</h1><p><img src="/images/2020/06/01/4009e710-a3cf-11ea-90bc-1986d0282c7a.png" alt="image.png"></p><h1 id="牛逼！"><a href="#牛逼！" class="headerlink" title="牛逼！"></a>牛逼！</h1><p><img src="/images/2020/06/01/6a4cd780-a3cf-11ea-90bc-1986d0282c7a.png" alt="image.png"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/assets/js/APlayer.min.js&quot; cla</summary>
      
    
    
    
    <category term="经验" scheme="http://www.sealin.net/categories/%E7%BB%8F%E9%AA%8C/"/>
    
    
    <category term="基础服务" scheme="http://www.sealin.net/tags/%E5%9F%BA%E7%A1%80%E6%9C%8D%E5%8A%A1/"/>
    
    <category term="Docker" scheme="http://www.sealin.net/tags/Docker/"/>
    
  </entry>
  
  <entry>
    <title>Win7 64位用3K引擎提示:Exception ERangeError解决教程</title>
    <link href="http://www.sealin.net/2020/03/19/mir-3km2-error/"/>
    <id>http://www.sealin.net/2020/03/19/mir-3km2-error/</id>
    <published>2020-03-19T03:12:13.000Z</published>
    <updated>2023-05-23T01:43:32.494Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>1、首先，右键点击打开任务栏右下角的时间显示那里，然后在出现的窗口中点击“更改时间和日期”然后把日期显示格式的下拉框中把日期显示格式改为“yyyy-MM-dd”的格式。然后应用确定。<br><img src="/images/2020/03/19/474bc810-698f-11ea-ad74-69aa0163b9e2.png" alt="image.png"></p><p>2、然后，点击“开始”按钮，在“运行”中输入“msconfig”，然后在出现的框中选“引导”-“高级选项”，勾选“最大内存”并在在下面的方框中输入“2048”，然后确定，重启电脑。此方法一般出现的较大内存的电脑之中，一般是2G以上的内存条。但是，我们建议你在不架设传奇的时候，最好把该“最大内存“的选项恢复到修改之前的默认状态，否则可能会对电脑有损害，如图：<br><img src="/images/2020/03/19/6011f1d0-698f-11ea-ad74-69aa0163b9e2.png" alt="image.png"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/assets/js/APlayer.min.js&quot; cla</summary>
      
    
    
    
    <category term="经验" scheme="http://www.sealin.net/categories/%E7%BB%8F%E9%AA%8C/"/>
    
    
    <category term="游戏" scheme="http://www.sealin.net/tags/%E6%B8%B8%E6%88%8F/"/>
    
    <category term="传奇" scheme="http://www.sealin.net/tags/%E4%BC%A0%E5%A5%87/"/>
    
  </entry>
  
  <entry>
    <title>传奇外观计算规则</title>
    <link href="http://www.sealin.net/2020/03/17/mir-calc/"/>
    <id>http://www.sealin.net/2020/03/17/mir-calc/</id>
    <published>2020-03-17T01:51:47.000Z</published>
    <updated>2023-05-23T01:43:32.494Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>不同的游戏引擎在拓展素材中的起始序号都不一样，比如items1.wil, hum1.wil等文件为拓展素材文件， 有的引擎从50开始， 有的引擎从60开始，具体的如果按文章计算不对，可以自行搜索对应引擎的计算方式。</p><h2 id="衣服外观计算"><a href="#衣服外观计算" class="headerlink" title="衣服外观计算"></a>衣服外观计算</h2><p>衣服素材文件在Hum.wil， 序号从0开始，1200张图片为1组。找到所需衣服的第一张图片除以1200，得到的结果就是物品数据库中配置的数字。比如Hum.wil里物品序号是3600，那么物品数据库应写3。<br>Hum2.wil 从50开始计算，第一套衣服外观在物品数据库中写50.</p><h2 id="衣服翅膀外观计算"><a href="#衣服翅膀外观计算" class="headerlink" title="衣服翅膀外观计算"></a>衣服翅膀外观计算</h2><p>衣服翅膀的外观素材在HumEffect.wil文件， 计算方式与衣服一样。</p><h2 id="武器外观计算"><a href="#武器外观计算" class="headerlink" title="武器外观计算"></a>武器外观计算</h2><p>武器素材在Weapon.wil，计算方式和衣服一样。</p><h2 id="怪物外观计算"><a href="#怪物外观计算" class="headerlink" title="怪物外观计算"></a>怪物外观计算</h2><p>用WIL编辑器打开Mon19.wil,我们计算一下虹魔教主的代码!<br>怪物的计算方式不一样,我们先找到第一个怪物是谁,第一个是蝎卫,第二个是猪卫,<br>第三个才是教主,他位第3,所以他的代码为182,计算方式为:<br>19-1*10+(3-1) 为什么减一,是因为要把0算进去!</p><h2 id="物品计算"><a href="#物品计算" class="headerlink" title="物品计算"></a>物品计算</h2><p>Items1.Wil从10000开始,其中10000表示Items1.wil里第一个物品.</p><h2 id="地图计算"><a href="#地图计算" class="headerlink" title="地图计算"></a>地图计算</h2><p>mmap1.wil从800开始.</p><h2 id="NPC计算"><a href="#NPC计算" class="headerlink" title="NPC计算"></a>NPC计算</h2><p>NPC1.wil从500开始.</p>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/assets/js/APlayer.min.js&quot; cla</summary>
      
    
    
    
    <category term="经验" scheme="http://www.sealin.net/categories/%E7%BB%8F%E9%AA%8C/"/>
    
    
    <category term="游戏" scheme="http://www.sealin.net/tags/%E6%B8%B8%E6%88%8F/"/>
    
    <category term="传奇" scheme="http://www.sealin.net/tags/%E4%BC%A0%E5%A5%87/"/>
    
  </entry>
  
  <entry>
    <title>Mac安装软件后打不开解决方案</title>
    <link href="http://www.sealin.net/2020/03/06/mac-app/"/>
    <id>http://www.sealin.net/2020/03/06/mac-app/</id>
    <published>2020-03-06T01:46:09.000Z</published>
    <updated>2023-05-23T01:43:32.493Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="不受信任的开发者"><a href="#不受信任的开发者" class="headerlink" title="不受信任的开发者"></a>不受信任的开发者</h1><p>打开finder -》 应用程序 -》 在app上右键(或按住control再点击APP)， 在弹出的选项中打开即可。</p><h1 id="软件已损坏"><a href="#软件已损坏" class="headerlink" title="软件已损坏"></a>软件已损坏</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo xattr -d com.apple.quarantine /Applications/xx.app</span><br></pre></td></tr></table></figure><p>将xx.app替换为提示损坏的app名称， 如qq.app</p><h1 id="因为Apple无法检查其是否包含恶意软件"><a href="#因为Apple无法检查其是否包含恶意软件" class="headerlink" title="因为Apple无法检查其是否包含恶意软件"></a>因为Apple无法检查其是否包含恶意软件</h1><p>启用任何来源</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo spctl --master-disable</span><br></pre></td></tr></table></figure><p>关闭任何来源</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo spctl --master-enable</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/assets/js/APlayer.min.js&quot; cla</summary>
      
    
    
    
    <category term="经验" scheme="http://www.sealin.net/categories/%E7%BB%8F%E9%AA%8C/"/>
    
    
    <category term="MAC" scheme="http://www.sealin.net/tags/MAC/"/>
    
    <category term="操作系统" scheme="http://www.sealin.net/tags/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/"/>
    
  </entry>
  
  <entry>
    <title>2020开年日记</title>
    <link href="http://www.sealin.net/2020/01/25/2020-01-25/"/>
    <id>http://www.sealin.net/2020/01/25/2020-01-25/</id>
    <published>2020-01-25T06:29:32.000Z</published>
    <updated>2023-05-23T01:43:32.477Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="题记"><a href="#题记" class="headerlink" title="题记"></a>题记</h1><blockquote><p>辞旧迎新， 没有烟花爆竹的新年似乎少了点什么， 甚至已经找不到儿时的新年感觉了。 印象中的新年， 应该在大年三十的晚上和小伙伴玩炮仗&#x2F;烟花， 初一早上被爆竹声吵醒， 虽然也曾觉得太过聒噪扰了早上的清梦。 真没有了这些元素， 又变得有些怀念起来。</p></blockquote><blockquote><p>本该喜庆祥和的春节， 在2020又显得有些不太平， 随着冠状病毒疫情的消息持续公布， 官方提供的数据也几乎以每天翻番的数量在增长。 当然这些数据只是官方提供的“确诊”数据， 除此之外有多少不被定性为确诊的病例， 不得而知。</p></blockquote><blockquote><p>武汉这个城市被率先封锁， 紧接着湖北的其他城市也相继封锁。 截止我写这篇文章， 整个湖北已经全部封闭，外面的人进不去， 里面的人出不来。 对于一个有5500万人口的疫情始发省份， 这个事情的严重性可想而知。不知道里面有多少游客&#x2F;学生还来不及回家， 希望他们平安， 也希望已经知道自己感染的人群心存善念， 不要恶意传播。</p></blockquote><h1 id="2019回顾"><a href="#2019回顾" class="headerlink" title="2019回顾"></a>2019回顾</h1><p>2019， 换了新工作环境， 认识了新的朋友， 生活似乎也变得稳定了一些。 虽然有时有所懈怠，学习却从未停止， 技术也得到了一些提升。 随着认知的拓宽， 也深深察觉到了自己的不足。 在认知范围相当狭窄的时候， 总是感觉所学已经对行业所需达到了全覆盖， 自我感觉很牛很强很满足。 IT行业啊， 技术日新月异，只能不断学习提高自己， 才能跟上技术的发展，不被行业淘汰。</p><h1 id="2020展望"><a href="#2020展望" class="headerlink" title="2020展望"></a>2020展望</h1><p>这个新年一改往年的轻松愉悦， 我相信全国的同胞也是如此， 因为冠状病毒的事态日趋严重， 这个新年几乎全国都不再像往年一样走亲访友， 拜年聚会， 这个新年只能在家里进行“自我隔离”， 为自己家人安全， 也为亲友家人安全。</p><p>对这次来势汹汹的疫情， 我已开始抱悲观心态。 目前还只是人流分散回家过年的阶段传播已经如此迅速， 到年后人群涌入一二线城市工作时， 还要传播多少人无法想象， 甚至现在还未到真正爆发性传播的阶段， 对于年后的发展， 我有一种不好的预感。</p><p>官方数据目前公布的数据显示， 确诊的病人已经有1336人，昨天的数据也才800多人， 而今天还是中午， 应该对比昨天又会是2倍的数字， 这些数字后面又有多少人的绝望。除了西藏全国都已发现有感染病例， 不得不让我在家里也变得有些紧张。</p><p>2020， 严于律己，宽以待人，保持学习。<br>最后祝愿大家都能度过一个平安的新年， 在这个特殊的春节， 再道快乐&#x2F;发财云云似乎已经不合时宜， 只愿在2020都能平平安安，身体健康。<br>（晚上出去屯粮准备长期“自我隔离”。。。）</p><p>贴上最新公布的疫情数据：<br><img src="/images/2020/01/25/3ddd91a0-3f3c-11ea-a75b-1331aa257ec5.png" alt="统计"><br><img src="/images/2020/01/25/30aa3470-3f3c-11ea-a75b-1331aa257ec5.png" alt="分布"></p><div style="text-align: right">Sealin<br />于2020年1月25日（庚子年元月初一）</div>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/assets/js/APlayer.min.js&quot; cla</summary>
      
    
    
    
    <category term="日记" scheme="http://www.sealin.net/categories/%E6%97%A5%E8%AE%B0/"/>
    
    
    <category term="日记" scheme="http://www.sealin.net/tags/%E6%97%A5%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>尾声 | 道阻且长，努力加餐</title>
    <link href="http://www.sealin.net/2020/01/23/jvm-37/"/>
    <id>http://www.sealin.net/2020/01/23/jvm-37/</id>
    <published>2020-01-23T10:20:23.000Z</published>
    <updated>2023-05-23T01:43:32.492Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script>        <div id="aplayer-pKSsZRcu" class="aplayer aplayer-tag-marker" style="margin-bottom: 20px;">            <pre class="aplayer-lrc-content"></pre>        </div>        <script>          var ap = new APlayer({            element: document.getElementById("aplayer-pKSsZRcu"),            narrow: false,            autoplay: false,            showlrc: false,            music: {              title: "音频37",              author: "郑雨迪",              url: "https://res001.geekbang.org/resource/audio/06/28/067c05a4856dbd534110fccfb23fab28.mp3",              pic: "",              lrc: ""            }          });          window.aplayers || (window.aplayers = []);          window.aplayers.push(ap);        </script><h1 id="正文"><a href="#正文" class="headerlink" title="正文"></a>正文</h1><p>说句实话，我也不知道是怎么写完这 36 篇技术文章的。</p><p>一周三篇的文章接近近万字，说多不多，对我而言还是挺困难的一件事。基本上，我连续好几个月的业余时间都贡献给写作，甚至一度重温了博士阶段被论文支配的恐怖。我想，这大概也算是在工作相对清闲的国外环境下，体验了一把 997 的生活。</p><p>这一路下来，我感觉写专栏的最大问题，其实并不在于写作本身，而在于它对你精力的消耗，这种消耗甚至会让你无法专注于本职工作。因此，我也愈发地佩服能够持续分享技术的同行们。还好我的工作挺有趣的，每天开开心心地上班写代码，只是一到下班时间就蔫了，不得不应付编辑的催稿回家码字。</p><p>我在写作的中途，多次感受到存稿不足的压力，以致于需要请年假来填补写作的空缺。不过，最后做到了风雨无阻、节假无休地一周三更，也算是幸不辱命吧。</p><p>说回专栏吧。在思考专栏大纲时，我想着，最好能够和杨晓峰老师的 Java 核心技术专栏形成互补，呈现给大家的内容相对更偏向于技术实现。</p><p>因此，有读者曾反馈讲解的知识点是否太偏，不实用。当时我的回答是，我并不希望将专栏单纯写成一本工具书，这样的知识你可以从市面上任意买到一本书获得。</p><p>我更希望的是，能够通过介绍 Java 虚拟机各个组件的设计和实现，让你之后遇到虚拟机相关的问题时，能够联想到具体的模块，甚至是对于其他语言的运行时，也可以举一反三相互对照。</p><p>不过，当我看到 Aleksey Shipilev<a href="https://www.youtube.com/watch?v=VaWgOCDBxYw">介绍 JMH 的讲座</a>时，发现大部分的内容专栏里都有涉及。于是心想，我还能够在上述答复中加一句：看老外的技术讲座再也不费劲了。</p><p>还有一个想说的是关于专栏知识点的正确性。我认为虚拟机的设计可以写一些自己的理解，但是具体到目前 HotSpot 的工程实现则是确定的。</p><p>为此，几乎每篇专栏我都会大量阅读 HotSpot 的源代码，和同事讨论实现背后的设计理念，在这个过程中，我也发现了一些 HotSpot 中的 Bug，或者年久失修的代码，又或者是设计不合理的地方。这大概也能够算作写专栏和我本职工作重叠的地方吧。</p><p>我会仔细斟酌文章中每一句是否可以做到达意。即便是这样，文章肯定还有很多不足，比如叙述不够清楚，内容存在误导等问题。许多读者都热心地指了出来，在此感谢各位的宝贵意见。接下来一段时间，我会根据大家的建议，对前面的文章进行修订。</p><p>专栏虽然到此已经结束了，但是并不代表你对 Java 虚拟机学习的停止， 我想，专栏的内容仅仅是为你打开了 JVM 学习的大门，里面的风景，还是需要你自己来探索。在文章的后面，我列出了一系列的 Java 虚拟机技术的相关博客和阅读资料，你仍然可以继续加餐。</p><p>你可以关注国内几位 Java 虚拟机大咖的微信公众号：R 大，个人认为是中文圈子里最了解 Java 虚拟机设计实现的人，你可以关注他的<a href="https://www.zhihu.com/people/rednaxelafx">知乎账号</a>；<a href="https://open.weixin.qq.com/qr/code?username=lovestblog">你假笨</a>，原阿里 Java 虚拟机团队成员，现<a href="http://www.perfma.com/">PerfMa</a> CEO；<a href="https://open.weixin.qq.com/qr/code?username=jnby1978">江南白衣</a>，唯品会资深架构师；<a href="https://open.weixin.qq.com/qr/code?username=whywhy_zj">占小狼</a>，美团基础架构部技术专家；<a href="https://open.weixin.qq.com/qr/code?username=gh_9f3b2a4e2a74">杨晓峰</a>，前甲骨文首席工程师。</p><p>如果英文阅读没问题的话，你可以关注<a href="http://cliffc.org/blog/">Cliff Click</a>、<a href="https://shipilev.net/">Aleksey Shipilëv</a>（他的<a href="https://shipilev.net/jvm-anatomy-park/">JVM Anatomy Park</a>十分有趣）和<a href="http://psy-lob-saw.blogspot.com/">Nitsan Wakart</a>的博客。你也可以关注<a href="http://openjdk.java.net/projects/mlvm/jvmlangsummit/">Java Virtual Machine Language Submit</a>和<a href="https://www.oracle.com/code-one/index.html">Oracle Code One</a>（前身是 JavaOne 大会）中关于 Java 虚拟机的演讲，以便掌握 Java 的最新发展动向。</p><p>当然，如果对 GraalVM 感兴趣的话，你可以订阅我们<a href="https://medium.com/graalvm">团队的博客</a>。我会在之后考虑将文章逐一进行翻译。</p><p>其他的阅读材料，你可以参考 R 大的这份<a href="https://www.douban.com/doulist/2545443/">书单</a>，或者这个<a href="https://github.com/deephacks/awesome-jvm">汇总贴</a>。</p><p>如果这个专栏激发了你对 Java 虚拟机的学习热情，那么我建议你着手去阅读 HotSpot 源代码，并且回馈给 OpenJDK 开源社区。这种回馈并不一定是提交 patch，也可以是 Bug report 或者改进建议等等。</p><p>我也会不定期地在本专栏中发布新的 Java 虚拟机相关内容，你如果有想要了解的内容，也可以给我留言反馈。</p><p>最后，感谢一路以来的陪伴与支持，谢谢你，我们后会有期！</p>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/assets/js/APlayer.min.js&quot; cla</summary>
      
    
    
    
    <category term="阅读" scheme="http://www.sealin.net/categories/%E9%98%85%E8%AF%BB/"/>
    
    <category term="深入拆解 Java 虚拟机" scheme="http://www.sealin.net/categories/%E9%98%85%E8%AF%BB/%E6%B7%B1%E5%85%A5%E6%8B%86%E8%A7%A3-Java-%E8%99%9A%E6%8B%9F%E6%9C%BA/"/>
    
    
    <category term="JAVA" scheme="http://www.sealin.net/tags/JAVA/"/>
    
    <category term="JVM" scheme="http://www.sealin.net/tags/JVM/"/>
    
  </entry>
  
  <entry>
    <title>36 | SubstrateVM：AOT编译框架</title>
    <link href="http://www.sealin.net/2020/01/23/jvm-36/"/>
    <id>http://www.sealin.net/2020/01/23/jvm-36/</id>
    <published>2020-01-23T10:14:47.000Z</published>
    <updated>2023-05-23T01:43:32.491Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script>        <div id="aplayer-qCoJCbsZ" class="aplayer aplayer-tag-marker" style="margin-bottom: 20px;">            <pre class="aplayer-lrc-content"></pre>        </div>        <script>          var ap = new APlayer({            element: document.getElementById("aplayer-qCoJCbsZ"),            narrow: false,            autoplay: false,            showlrc: false,            music: {              title: "音频36",              author: "郑雨迪",              url: "https://res001.geekbang.org/resource/audio/60/b4/600d2b337171381b5f16347bc8abc5b4.mp3",              pic: "",              lrc: ""            }          });          window.aplayers || (window.aplayers = []);          window.aplayers.push(ap);        </script><h1 id="正文"><a href="#正文" class="headerlink" title="正文"></a>正文</h1><p>今天我们来聊聊 GraalVM 中的 Ahead-Of-Time（AOT）编译框架 SubstrateVM。</p><p>先来介绍一下 AOT 编译，所谓 AOT 编译，是与即时编译相对立的一个概念。我们知道，即时编译指的是在程序的运行过程中，将字节码转换为可在硬件上直接运行的机器码，并部署至托管环境中的过程。</p><p>而 AOT 编译指的则是，在程序运行之前，便将字节码转换为机器码的过程。它的成果可以是需要链接至托管环境中的动态共享库，也可以是独立运行的可执行文件。</p><p>狭义的 AOT 编译针对的目标代码需要与即时编译的一致，也就是针对那些原本可以被即时编译的代码。不过，我们也可以简单地将 AOT 编译理解为类似于 GCC 的静态编译器。</p><p>AOT 编译的优点显而易见：我们无须在运行过程中耗费 CPU 资源来进行即时编译，而程序也能够在启动伊始就达到理想的性能。</p><p>然而，与即时编译相比，AOT 编译无法得知程序运行时的信息，因此也无法进行基于类层次分析的完全虚方法内联，或者基于程序 profile 的投机性优化（并非硬性限制，我们可以通过限制运行范围，或者利用上一次运行的程序 profile 来绕开这两个限制）。这两者都会影响程序的峰值性能。</p><p>Java 9 引入了实验性 AOT 编译工具<a href="http://openjdk.java.net/jeps/295">jaotc</a>。它借助了 Graal 编译器，将所输入的 Java 类文件转换为机器码，并存放至生成的动态共享库之中。</p><p>在启动过程中，Java 虚拟机将加载参数-XX:AOTLibrary所指定的动态共享库，并部署其中的机器码。这些机器码的作用机理和即时编译生成的机器码作用机理一样，都是在方法调用时切入，并能够去优化至解释执行。</p><p>由于 Java 虚拟机可能通过 Java agent 或者 C agent 改动所加载的字节码，或者这份 AOT 编译生成的机器码针对的是旧版本的 Java 类，因此它需要额外的验证机制，来保证即将链接的机器码的语义与对应的 Java 类的语义是一致的。</p><p>jaotc 使用的机制便是类指纹（class fingerprinting）。它会在动态共享库中保存被 AOT 编译的 Java 类的摘要信息。在运行过程中，Java 虚拟机负责将该摘要信息与已加载的 Java 类相比较，一旦不匹配，则直接舍弃这份 AOT 编译的机器码。</p><p>jaotc 的一大应用便是编译 java.base module，也就是 Java 核心类库中最为基础的类。这些类很有可能会被应用程序所调用，但调用频率未必高到能够触发即时编译。</p><p>因此，如果 Java 虚拟机能够使用 AOT 编译技术，将它们提前编译为机器码，那么将避免在执行即时编译生成的机器码时，因为“不小心”调用到这些基础类，而需要切换至解释执行的性能惩罚。</p><p>不过，今天要介绍的主角并非 jaotc，而是同样使用了 Graal 编译器的 AOT 编译框架 SubstrateVM。</p><h1 id="SubstrateVM-的设计与实现"><a href="#SubstrateVM-的设计与实现" class="headerlink" title="SubstrateVM 的设计与实现"></a>SubstrateVM 的设计与实现</h1><p>SubstrateVM 的设计初衷是提供一个高启动性能、低内存开销，并且能够无缝衔接 C 代码的 Java 运行时。它与 jaotc 的区别主要有两处。</p><p>第一，SubstrateVM 脱离了 HotSpot 虚拟机，并拥有独立的运行时，包含异常处理，同步，线程管理，内存管理（垃圾回收）和 JNI 等组件。</p><p>第二，SubstrateVM 要求目标程序是封闭的，即不能动态加载其他类库等。基于这个假设，SubstrateVM 将探索整个编译空间，并通过静态分析推算出所有虚方法调用的目标方法。最终，SubstrateVM 会将所有可能执行到的方法都纳入编译范围之中，从而免于实现额外的解释执行器。</p><blockquote><p>有关 SubstrateVM 的其他限制，你可以参考<a href="https://github.com/oracle/graal/blob/master/substratevm/LIMITATIONS.md">这篇文档</a>。</p></blockquote><p>从执行时间上来划分，SubstrateVM 可分为两部分：native image generator 以及 SubstrateVM 运行时。后者 SubstrateVM 运行时便是前面提到的精简运行时，经过 AOT 编译的目标程序将跑在该运行时之上。</p><p>native image generator 则包含了真正的 AOT 编译逻辑。它本身是一个 Java 程序，将使用 Graal 编译器将 Java 类文件编译为可执行文件或者动态链接库。</p><p>在进行编译之前，native image generator 将采用指针分析（points-to analysis），从用户提供的程序入口出发，探索所有可达的代码。在探索的同时，它还将执行初始化代码，并在最终生成可执行文件时，将已初始化的堆保存至一个堆快照之中。这样一来，SubstrateVM 将直接从目标程序开始运行，而无须重复进行 Java 虚拟机的初始化。</p><p>SubstrateVM 主要用于 Java 虚拟机语言的 AOT 编译，例如 Java、Scala 以及 Kotlin。Truffle 语言实现本质上就是 Java 程序，而且它所有用到的类都是编译时已知的，因此也适合在 SubstrateVM 上运行。不过，它并不会 AOT 编译用 Truffle 语言写就的程序。</p><h1 id="SubstrateVM-的启动时间与内存开销"><a href="#SubstrateVM-的启动时间与内存开销" class="headerlink" title="SubstrateVM 的启动时间与内存开销"></a>SubstrateVM 的启动时间与内存开销</h1><p>SubstrateVM 的启动时间和内存开销非常少。我们曾比较过用 C 和用 Java 两种语言写就的 Hello World 程序。C 程序的执行时间在 10ms 以下，内存开销在 500KB 以下。在 HotSpot 虚拟机上运行的 Java 程序则需要 40ms，内存开销为 24MB。</p><p>使用 SubstrateVM 的 Java 程序的执行时间则与 C 程序持平，内存开销在 850KB 左右。这得益于 SubstrateVM 所保存的堆快照，以及无须额外初始化，直接执行目标代码的特性。</p><p>同样，我们还比较了用 JavaScript 编写的 Hello World 程序。这里的测试对象是 Google 的 V8 以及基于 Truffle 的 Graal.js。这两个执行引擎都涉及了大量的解析代码以及执行代码，因此可以当作大型应用程序来看待。</p><p>V8 的执行效率非常高，能够与 C 程序的 Hello World 相媲美，但是它使用了约 18MB 的内存。运行在 HotSpot 虚拟机上的 Graal.js 则需要 650ms 方能执行完这段 JavaScript 的 Hello World 程序，而且内存开销在 120MB 左右。</p><p>运行在 SubstrateVM 上的 Graal.js 无论是执行时间还是内存开销都十分优越，分别为 10ms 以下以及 4.2MB。我们可以看到，它在运行时间与 V8 持平的情况下，内存开销远小于 V8。</p><p>由于 SubstrateVM 的轻量特性，它十分适合于嵌入至其他系统之中。Oracle Labs 的另一个团队便是将 Truffle 语言实现嵌入至 Oracle 数据库之中，这样就可以在数据库中运行任意语言的预储程序（stored procedure）。如果你感兴趣的话，可以搜索 Oracle Database Multilingual Engine（MLE），或者参阅这个<a href="https://www.oracle.com/technetwork/database/multilingual-engine/overview/index.html">网址</a>。我们团队也在与 MySQL 合作，开发 MySQL MLE，详情可留意我们在今年 Oracle Code One 的<a href="https://oracle.rainfocus.com/widget/oracle/oow18/catalogcodeone18?search=MySQL%20JavaScript">讲座</a>。</p><h1 id="Metropolis-项目"><a href="#Metropolis-项目" class="headerlink" title="Metropolis 项目"></a>Metropolis 项目</h1><p>去年 OpenJDK 推出了<a href="http://openjdk.java.net/projects/metropolis/">Metropolis 项目</a>，他们希望可以实现“Java-on-Java”的远大目标。</p><p>我们知道，目前 HotSpot 虚拟机的绝大部分代码都是用 C++ 写的。这也造就了一个非常有趣的现象，那便是对 Java 语言本身的贡献需要精通 C++。此外，随着 HotSpot 项目日渐庞大，维护难度也逐渐上升。</p><p>由于上述种种原因，使用 Java 来开发 Java 虚拟机的呼声越来越高。Oracle 的架构师 John Rose 便提出了使用 Java 开发 Java 虚拟机的四大好处：</p><ol><li>能够完全控制编译 Java 虚拟机时所使用的优化技术；</li><li>能够与 C++ 语言的更新解耦合；</li><li>能够减轻开发人员以及维护人员的负担；</li><li>能够以更为敏捷的方式实现 Java 的新功能。</li></ol><p>当然，Metropolis 项目并非第一个提出 Java-on-Java 概念的项目。实际上，<a href="https://www.jikesrvm.org/">JikesRVM 项目</a>和<a href="https://github.com/beehive-lab/Maxine-VM">Maxine VM</a> 项目都已用 Java 完整地实现了一套 Java 虚拟机（后者的即时编译器 C1X 便是 Graal 编译器的前身）。</p><p>然而，Java-on-Java 技术通常会干扰应用程序的垃圾回收、即时编译优化，从而严重影响 Java 虚拟机的启动性能。</p><p>举例来说，目前使用了 Graal 编译器的 HotSpot 虚拟机会在即时编译过程中生成大量的 Java 对象，这些 Java 对象同样会占据应用程序的堆空间，从而使得垃圾回收更加频繁。</p><p>另外，Graal 编译器本身也会触发即时编译，并与应用程序的即时编译竞争编译线程的 CPU 资源。这将造成应用程序从解释执行切换至即时编译生成的机器码的时间大大地增长，从而降低应用程序的启动性能。</p><p>Metropolis 项目的第一个子项目便是探索部署已 AOT 编译的 Graal 编译器的可能性。这个子项目将借助 SubstrateVM 技术，把整个 Graal 编译器 AOT 编译为机器码。</p><p>这样一来，在运行过程中，Graal 编译器不再需要被即时编译，因此也不会再占据可用于即时编译应用程序的 CPU 资源，使用 Graal 编译器的 HotSpot 虚拟机的启动性能将得到大幅度地提升。</p><p>此外，由于 SubstrateVM 编译得到的 Graal 编译器将使用独立的堆空间，因此 Graal 编译器在即时编译过程中生成的 Java 对象将不再干扰应用程序所使用的堆空间。</p><p>目前 Metropolis 项目仍处于前期验证阶段，如果你感兴趣的话，可以关注之后的发展情况。</p><h1 id="总结与实践"><a href="#总结与实践" class="headerlink" title="总结与实践"></a>总结与实践</h1><p>今天我介绍了 GraalVM 中的 AOT 编译框架 SubstrateVM。</p><p>SubstrateVM 的设计初衷是提供一个高启动性能、低内存开销，和能够无缝衔接 C 代码的 Java 运行时。它是一个独立的运行时，拥有自己的内存管理等组件。</p><p>SubstrateVM 要求所要 AOT 编译的目标程序是封闭的，即不能动态加载其他类库等。在进行 AOT 编译时，它会探索所有可能运行到的方法，并全部纳入编译范围之内。</p><p>SubstrateVM 的启动时间和内存开销都非常少，这主要得益于在 AOT 编译时便已保存了已初始化好的堆快照，并支持从程序入口直接开始运行。作为对比，HotSpot 虚拟机在执行 main 方法前需要执行一系列的初始化操作，因此启动时间和内存开销都要远大于运行在 SubstrateVM 上的程序。</p><p>Metropolis 项目将运用 SubstrateVM 项目，逐步地将 HotSpot 虚拟机中的 C++ 代码替换成 Java 代码，从而提升 HotSpot 虚拟机的可维护性，也加快新 Java 功能的开发效率。</p><p>今天的实践环节，请你参考我们官网的<a href="https://www.graalvm.org/docs/examples/java-kotlin-aot/">SubstrateVM 教程</a>，AOT 编译一段 Java-Kotlin 代码。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/assets/js/APlayer.min.js&quot; cla</summary>
      
    
    
    
    <category term="阅读" scheme="http://www.sealin.net/categories/%E9%98%85%E8%AF%BB/"/>
    
    <category term="深入拆解 Java 虚拟机" scheme="http://www.sealin.net/categories/%E9%98%85%E8%AF%BB/%E6%B7%B1%E5%85%A5%E6%8B%86%E8%A7%A3-Java-%E8%99%9A%E6%8B%9F%E6%9C%BA/"/>
    
    
    <category term="JAVA" scheme="http://www.sealin.net/tags/JAVA/"/>
    
    <category term="JVM" scheme="http://www.sealin.net/tags/JVM/"/>
    
  </entry>
  
</feed>
